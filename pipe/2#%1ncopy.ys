#/* $begin ncopy-ys */
##################################################################
# ncopy.ys - Copy a src block of len words to dst.
# Return the number of positive words (>0) contained in src.
#
# Include your name and ID here.
#
# Describe how and why you modified the baseline code.
#
##################################################################
# Do not modify this portion
# Function prologue.
# %rdi = src, %rsi = dst, %rdx = len
ncopy:

##################################################################
# You can modify this portion
	# Loop header
	#xorq %rax,%rax		# count = 0; 删掉，因为是单次程序，rax初始化就是0
	iaddq $-2,%rax	
	andq %rdx,%rdx		# len <= 0?
	jl remian		# if so, goto Done:
Loop:	
	mrmovq (%rdi), %r10	# read val from src...
	mrmovq 8(%rdi),%r11     #避免加载使用冒险	
	rmmovq %r10,(%rsi)      #copy
	andq %r10,%r10          #val<=0?
	jle Nloop2
	iaddq $1,%rax
Nloop2:
	rmmovq %r11,8(%rsi)
	andq %r11,%r11
	jle nextLoop
	iaddq $1,%rax
nextLoop:
	iaddq $16,%rdi          #src+=2
	iaddq $16,%rsi          #dst+=2
	iaddq $-2,%rdx
	jge Loop
#Npos:	
	#iaddq $8, %rdi		# src++
	#iaddq $8, %rsi		# dst++
	#andq %rdx,%rdx		# len > 0?设计iaddq的时候，会让它顺便设置符号位。所以我们可以省去andq %rdx,%rdx这个操作再去设置符号位
#	iaddq $-1, %rdx		# len--	
#	jg Loop			# if so, goto Loop:
remian: 
 	iaddq $2,%rdx           #恢复，剩下小于2的情况
	iaddq $-1,%rdx
	jl Done
	mrmovq (%rdi),%r10
	iaddq $8,%rdi
	rmmovq %r10,(%rsi)
	iaddq $8,%rsi

	iaddq $-1,%rax
	andq %r10, %r10		# val <= 0?
	jle Done
	iaddq $1,%rax
##################################################################
# Do not modify the following section of code
# Function epilogue.
Done:
	ret
##################################################################
# Keep the following label at the end of your function
End:
#/* $end ncopy-ys */
